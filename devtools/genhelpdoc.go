// Â© 2024 Ilya Mateyko. All rights reserved.
// Use of this source code is governed by the ISC
// license that can be found in the LICENSE.md file.

//go:build ignore

// genhelpdoc.go generates help documentation for all commands from their doc comments.

package main

import (
	"bytes"
	"fmt"
	"go/build"
	"go/format"
	"io/fs"
	"log"
	"os"
	"os/exec"
	"path/filepath"
)

func main() {
	if err := filepath.WalkDir("./cmd", func(path string, d fs.DirEntry, err error) error {
		if err != nil {
			return err
		}

		if !d.IsDir() {
			return nil
		}

		pkg, err := build.ImportDir(path, build.IgnoreVendor)
		if err != nil || len(pkg.GoFiles) == 0 || pkg.Name != "main" {
			return nil
		}

		out, err := exec.Command("go", "doc", "./"+path).Output()
		if err != nil {
			if exitErr, ok := err.(*exec.ExitError); ok {
				return fmt.Errorf("`go doc` failed with %v: %s", exitErr, exitErr.Stderr)
			}
			return err
		}

		var buf bytes.Buffer
		buf.WriteString("// Code generated by devtools/genhelpdoc.go; DO NOT EDIT.\n\n")
		buf.WriteString("package main\n\n")
		buf.WriteString("const helpDoc = `\n")
		buf.Write(out)
		buf.WriteString("`\n\n")

		src, err := format.Source(buf.Bytes())
		if err != nil {
			return err
		}

		return os.WriteFile(filepath.Join(path, "helpdoc.go"), src, 0o644)
	}); err != nil {
		log.Fatal(err)
	}
}
