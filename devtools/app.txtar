-- doc.go --
/*
Fill this with the real documentation.

# Usage

	$ ...
*/
package main

import (
	_ "embed"

	"go.astrophena.name/base/cli"
)

//go:embed doc.go
var doc []byte

func init() { cli.SetDocComment(doc) }
-- main.go --
package main

import (
	"context"
	"flag"

	"go.astrophena.name/base/cli"
)

func main() { cli.Main(new(app)) }

type app struct {
}

func (a *app) Flags(fs *flag.FlagSet) {
}

func (a *app) Run(ctx context.Context) error {
	env := cli.GetEnv(ctx)

	env.Logf("Hello, world!")

	return nil
}
-- main_test.go --
package main

import (
	"flag"
	"testing"

	"go.astrophena.name/base/cli"
	"go.astrophena.name/base/cli/clitest"
)

func TestRun(t *testing.T) {
	t.Parallel()

	clitest.Run(t, func(t *testing.T) *app {
		return new(app)
	}, map[string]clitest.Case[*app]{
		"prints hello": {
			Args:         []string{},
			WantInStderr: "Hello, world!",
		},
		"prints usage with help flag": {
			Args:    []string{"-h"},
			WantErr: flag.ErrHelp,
		},
		"version": {
			Args:    []string{"-version"},
			WantErr: cli.ErrExitVersion,
		},
	},
	)
}
