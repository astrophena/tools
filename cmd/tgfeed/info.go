// Â© 2024 Ilya Mateyko. All rights reserved.
// Use of this source code is governed by the ISC
// license that can be found in the LICENSE.md file.

// Code generated by devtools/gen/info.go; DO NOT EDIT.

package main

import "go.astrophena.name/tools/internal/cli"

func init() {
	cli.SetInfo(cli.Info{Name: ".", Description: "Tgfeed fetches RSS feeds and sends new articles via Telegram.\n\n# Usage\n\n    $ tgfeed [flags...]\n\n# Environment variables\n\nThe tgfeed program relies on the following environment variables:\n\n  - CHAT_ID: Telegram chat ID where the program sends new articles.\n  - GIST_ID: GitHub Gist ID where the program stores its state.\n  - GITHUB_TOKEN: GitHub personal access token for accessing the GitHub API.\n  - TELEGRAM_TOKEN: Telegram bot token for accessing the Telegram Bot API.\n  - STATS_SPREADSHEET_ID: ID of the Google Spreadsheet to which the\n    program uploads statistics for every run. This is required if the\n    SERVICE_ACCOUNT_KEY is provided.\n  - STATS_SPREADSHEET_RANGE: Range of the Google Spreadsheet to which the\n    program uploads statistics for every run. Defaults to \"Stats\".\n  - SERVICE_ACCOUNT_KEY: JSON string representing the service account key for\n    accessing the Google API. It's not required, and stats won't be uploaded to\n    a spreadsheet if this variable is not set.\n\n# Configuration\n\ntgfeed loads it's configuration from config.star file on GitHub Gist. This file\nis written in Starlark language and defines a list of feeds, for example:\n\n    feeds = [\n        feed(\n            url = \"https://hnrss.org/newest\",\n            title = \"Hacker News: Newest\",\n            block_rule = lambda item: \"pdf\" in item.title.lower(), # Block PDF files.\n        )\n    ]\n\nEach feed can have a title, URL, and optional block and keep rules.\n\nBlock and keep rules are Starlark functions that take a feed item as an argument\nand return a boolean value. If a block rule returns true, the item is not\nsent to Telegram. If a keep rule returns true, the item is sent to Telegram;\notherwise, it is not.\n\nThe feed item passed to block_rule and keep_rule is a struct with the following\nkeys:\n\n  - title: The title of the item.\n  - url: The URL of the item.\n  - description: The description of the item.\n  - content: The content of the item.\n  - categories: A list of categories the item belongs to.\n\n# State\n\ntgfeed stores it's state on GitHub Gist.\n\nIt maintains a state for each feed, including last modified time, last updated\ntime, ETag, error count, and last error message. It keeps track of failing\nfeeds and disables them after a certain threshold of consecutive failures.\nState information is stored and updated in the state.json file on GitHub Gist.\nYou won't need to touch this file at all, except from very rare cases.\n\n# Stats collection\n\ntgfeed collects and reports stats about every run to Google Sheets. You can\nspecify the ID of the spreadsheet via the STATS_SPREADSHEET_ID environment\nvariable. To collect stats, you must provide the SERVICE_ACCOUNT_KEY environment\nvariable with JSON string representing the service account key for accessing the\nGoogle API. Stats include:\n\n  - Total number of feeds fetched\n  - Number of successfully fetched feeds\n  - Number of feeds that failed to fetch\n  - Number of feeds that were not modified\n  - Start time of a run\n  - Duration of a run\n  - Number of parsed RSS items\n  - Total fetch time\n  - Average fetch time\n  - Memory usage\n\nYou can use these stats to monitor performance of tgfeed and understand which\nfeeds are causing problems.\n\n# Administration\n\nTo edit the config.star file, you can use the -edit flag. This will open the\nfile in your default editor (specified by the $EDITOR environment variable).\nAfter you save the changes and close the editor, the updated config.star will be\nsaved back to the Gist. For example:\n\n    $ tgfeed -edit\n\nTo reenable a failing feed that has been disabled due to consecutive failures,\nyou can use the -reenable flag followed by the URL of the feed. For example:\n\n    $ tgfeed -reenable https://example.com/feed\n\nTo view the list of feeds, you can use the -feeds flag. This will also print the\nURLs of feeds that have encountered errors during fetching. For example:\n\n    $ tgfeed -feeds\n"})
}
